# -*- coding: utf-8 -*-
#
#  __   __.  _______ ____    __    ____   ______   ______        _______.
# |  \ |  | |   ____|\   \  /  \  /   /  /      | /  __  \      /       |
# |   \|  | |  |__    \   \/    \/   /  |  ,----'|  |  |  |    |   (----`
# |  . `  | |   __|    \            /   |  |     |  |  |  |     \   \    
# |  |\   | |  |____    \    /\    /    |  `----.|  `--'  | .----)   |   
# |__| \__| |_______|    \__/  \__/      \______| \______/  |_______/      

#   http://www.apache.org/licenses/LICENSE-2.0

########################################################################################################################
###########################################                       ######################################################
###########################################  READ ONLY LIBRARIES  ######################################################
###########################################                       ######################################################
########################################################################################################################

from builtins import range
from datetime import timedelta, datetime
import pymsteams
import random
import json
import logging
log = logging.getLogger(__name__)
import base64

import airflow
from airflow.models import DAG
from airflow.operators.bash_operator import BashOperator
from airflow.operators.dummy_operator import DummyOperator
from airflow.operators.python_operator import PythonOperator
from airflow.operators.python_operator import BranchPythonOperator

########################################################################################################################
#######################################                                  ###############################################
#######################################  CUSTOM LIBRARIES AND VARIABLES  ###############################################
#######################################                                  ###############################################
########################################################################################################################

DAGS = '/usr/local/airflow/dags'
PLAYBOOKS = '/usr/local/airflow/playbooks'
SCRIPTS = '/usr/local/airflow/scripts'

########################################################################################################################
##############################################                  ########################################################
##############################################  DAG DEFINITION  ########################################################
##############################################                  ########################################################
########################################################################################################################

args = {
    'owner': 'Airflow',
    'start_date': airflow.utils.dates.days_ago(2),
}

dag = DAG(
    dag_id='newcos_dag',
    default_args=args,
    schedule_interval='0 0 * * *',
    dagrun_timeout=timedelta(minutes=60),
)

########################################################################################################################
##############################################                  ########################################################
##############################################  Custom Functions  ########################################################
##############################################                  ########################################################
########################################################################################################################

def send_teams_message():
    WEBHOOK_URL = 'https://outlook.office.com/webhook/327044bc-8860-4705-a521-48cc9bfd264e@58005ddb-3d82-4718-9e75-ec5c71cca7ec/IncomingWebhook/ce255d45adfd4d94aa803a84e86e1d6f/4b94f775-45ba-4f8d-a767-252cb12f9726'
    # You must create the connectorcard object with the Microsoft Webhook URL
    myTeamsMessage = pymsteams.connectorcard(WEBHOOK_URL)

    # Add text to the message.
    msg = 'airflow message!'
    myTeamsMessage.text(msg)
    print('Sending message ' + str(msg))
    # send the message.
    myTeamsMessage.send()

########################################################################################################################
###############################################                     ####################################################
###############################################  TASKS DEFINITIONS  ####################################################
###############################################                     ####################################################
########################################################################################################################

newcos_init = BashOperator(task_id='newcos_init',bash_command='ansible --version -vvv', dag=dag,)
teams_message = PythonOperator(task_id='send_teams_message', python_callable=send_teams_message,dag=dag,)
newcos_end = BashOperator(task_id='newcos_end', bash_command='echo "run_id={{ run_id }} | dag_run={{ dag_run }}"', dag=dag,)
ansible_playbook_sbc = BashOperator(task_id='playbook_sbc',bash_command='cd ' + PLAYBOOKS + ' && ansible-playbook -i ' + PLAYBOOKS + '/inventory ' + PLAYBOOKS + '/sbc_audiocodes_telnet.yaml && printenv', env={'AIRFLOW_CTX_MESSAGE': 'holaaaaaaaaaaaaaa'}, dag=dag,)

########################################################################################################################
################################################                  ######################################################
################################################  TASKS WORKFLOW  ######################################################
################################################                  ######################################################
########################################################################################################################

newcos_init >> ansible_playbook_sbc
ansible_playbook_sbc >> teams_message
teams_message >> newcos_end

if __name__ == "__main__":
    dag.cli()
